\begin{Verbatim}[commandchars=\\\{\}]
\PYG{k}{function} \PYG{n+nf}{convert\PYGZus{}post\PYGZus{}inputs\PYGZus{}to\PYGZus{}server\PYGZus{}graph} \PYG{p}{()}
\PYG{p}{\PYGZob{}}
	\PYG{n+nv}{\PYGZdl{}graph} \PYG{o}{=} \PYG{p}{[];}
	
	\PYG{k}{foreach} \PYG{p}{(}\PYG{n+nv}{\PYGZdl{}\PYGZus{}POST} \PYG{k}{as} \PYG{n+nv}{\PYGZdl{}key} \PYG{o}{=\PYGZgt{}} \PYG{n+nv}{\PYGZdl{}val}\PYG{p}{)} \PYG{p}{\PYGZob{}}
		\PYG{k}{if} \PYG{p}{(}\PYG{n+nb}{strpos}\PYG{p}{(}\PYG{n+nv}{\PYGZdl{}key}\PYG{p}{,} \PYG{l+s+s2}{\PYGZdq{}connect\PYGZus{}\PYGZdq{}}\PYG{p}{)} \PYG{o}{===} \PYG{l+m+mi}{0}\PYG{p}{)} \PYG{p}{\PYGZob{}}
			\PYG{n+nv}{\PYGZdl{}pos} \PYG{o}{=} \PYG{n+nb}{explode}\PYG{p}{(}\PYG{l+s+s2}{\PYGZdq{}\PYGZus{}\PYGZdq{}}\PYG{p}{,} \PYG{n+nv}{\PYGZdl{}key}\PYG{p}{);}
			\PYG{n+nv}{\PYGZdl{}pos} \PYG{o}{=} \PYG{n+nb}{explode}\PYG{p}{(}\PYG{l+s+s2}{\PYGZdq{}x\PYGZdq{}}\PYG{p}{,} \PYG{n+nv}{\PYGZdl{}pos}\PYG{p}{[}\PYG{l+m+mi}{1}\PYG{p}{]);}
			
			\PYG{k}{if} \PYG{p}{(}\PYG{o}{!}\PYG{n+nb}{isset}\PYG{p}{(}\PYG{n+nv}{\PYGZdl{}graph}\PYG{p}{[}\PYG{n+nv}{\PYGZdl{}pos}\PYG{p}{[}\PYG{l+m+mi}{0}\PYG{p}{]]))} \PYG{p}{\PYGZob{}}
				\PYG{n+nv}{\PYGZdl{}graph}\PYG{p}{[}\PYG{n+nv}{\PYGZdl{}pos}\PYG{p}{[}\PYG{l+m+mi}{0}\PYG{p}{]]} \PYG{o}{=} \PYG{p}{[];}
			\PYG{p}{\PYGZcb{}}
			
			\PYG{n+nv}{\PYGZdl{}graph}\PYG{p}{[}\PYG{n+nv}{\PYGZdl{}pos}\PYG{p}{[}\PYG{l+m+mi}{0}\PYG{p}{]][]} \PYG{o}{=} \PYG{n+nv}{\PYGZdl{}pos}\PYG{p}{[}\PYG{l+m+mi}{1}\PYG{p}{];}
		\PYG{p}{\PYGZcb{}}
	\PYG{p}{\PYGZcb{}}
	
	\PYG{k}{return} \PYG{p}{(}\PYG{n+nx}{object}\PYG{p}{)} \PYG{n+nv}{\PYGZdl{}graph}\PYG{p}{;}
\PYG{p}{\PYGZcb{}}

\PYG{k}{function} \PYG{n+nf}{store\PYGZus{}graph\PYGZus{}configuration} \PYG{p}{(}\PYG{n+nv}{\PYGZdl{}graph}\PYG{p}{)}
\PYG{p}{\PYGZob{}}
	\PYG{n+nb}{file\PYGZus{}put\PYGZus{}contents}\PYG{p}{(}\PYG{l+s+s2}{\PYGZdq{}./graph.json\PYGZdq{}}\PYG{p}{,} \PYG{n+nb}{json\PYGZus{}encode}\PYG{p}{(}\PYG{n+nv}{\PYGZdl{}graph}\PYG{p}{));}
\PYG{p}{\PYGZcb{}}

\PYG{k}{function} \PYG{n+nf}{load\PYGZus{}graph\PYGZus{}configuration} \PYG{p}{()}
\PYG{p}{\PYGZob{}}
	\PYG{k}{return} \PYG{n+nb}{json\PYGZus{}decode}\PYG{p}{(}\PYG{n+nb}{file\PYGZus{}get\PYGZus{}contents}\PYG{p}{(}\PYG{l+s+s2}{\PYGZdq{}./graph.json\PYGZdq{}}\PYG{p}{));}
\PYG{p}{\PYGZcb{}}

\PYG{k}{if} \PYG{p}{(}\PYG{n+nv}{\PYGZdl{}\PYGZus{}SERVER}\PYG{p}{[}\PYG{l+s+s1}{\PYGZsq{}REQUEST\PYGZus{}METHOD\PYGZsq{}}\PYG{p}{]} \PYG{o}{===} \PYG{l+s+s1}{\PYGZsq{}POST\PYGZsq{}} \PYG{o}{\PYGZam{}\PYGZam{}} \PYG{n+nv}{\PYGZdl{}\PYGZus{}POST}\PYG{p}{[}\PYG{l+s+s1}{\PYGZsq{}action\PYGZsq{}}\PYG{p}{]} \PYG{o}{==} \PYG{l+s+s2}{\PYGZdq{}graf\PYGZdq{}}\PYG{p}{)} \PYG{p}{\PYGZob{}}
	\PYG{n+nv}{\PYGZdl{}graph} \PYG{o}{=} \PYG{n+nx}{convert\PYGZus{}post\PYGZus{}inputs\PYGZus{}to\PYGZus{}server\PYGZus{}graph}\PYG{p}{();}
	\PYG{n+nx}{store\PYGZus{}graph\PYGZus{}configuration}\PYG{p}{(}\PYG{n+nv}{\PYGZdl{}graph}\PYG{p}{);}
	\PYG{n+nx}{cmd\PYGZus{}broadcast}\PYG{p}{([}
		\PYG{l+s+s2}{\PYGZdq{}action\PYGZdq{}} \PYG{o}{=\PYGZgt{}} \PYG{l+s+s2}{\PYGZdq{}graf\PYGZdq{}}\PYG{p}{,}
		\PYG{l+s+s2}{\PYGZdq{}graf\PYGZdq{}} \PYG{o}{=\PYGZgt{}} \PYG{n+nv}{\PYGZdl{}graph}\PYG{p}{,}
	\PYG{p}{]);}
	\PYG{n+nx}{log\PYGZus{}msg}\PYG{p}{(}\PYG{l+s+s2}{\PYGZdq{}Zakutalizowano strukturÄ™ grafu\PYGZdq{}}\PYG{p}{);}
\PYG{p}{\PYGZcb{}}

\PYG{n+nv}{\PYGZdl{}graph} \PYG{o}{=} \PYG{n+nx}{load\PYGZus{}graph\PYGZus{}configuration}\PYG{p}{();}
\end{Verbatim}
